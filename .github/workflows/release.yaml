on:
  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: wangyoucao577/go-release-action@v1.33
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "https://dl.google.com/go/go1.23.5.linux-amd64.tar.gz"
          build_flags: "-trimpath"
          ldflags: |
            -s -w \
            -X=github.com/helviojunior/sprayshark/internal/version.Version=$(cat /tmp/version.txt) \
            -X=github.com/helviojunior/sprayshark/internal/version.GitHash=$(cat /tmp/githash.txt) \
            -X=github.com/helviojunior/sprayshark/internal/version.GoBuildEnv=$(cat /tmp/buildenv.txt) \
            -X=github.com/helviojunior/sprayshark/internal/version.GoBuildTime=$(cat /tmp/buildtime.txt)
          pre_command: |
            echo "${{ github.event.release.tag_name }}" | grep -oE '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' > /tmp/version.txt
            git rev-parse --short HEAD > /tmp/githash.txt
            go version | cut -d' ' -f 3,4 | sed 's/ /_/g' > /tmp/buildenv.txt
            date -u +'%Y-%m-%dT%H:%M:%SZ' > /tmp/buildtime.txt


