on:
  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get OS and arch info
        run: |
          GITHASH=$(git rev-parse --short HEAD)
          BUILDENV=$(go version | cut -d' ' -f 3,4 | sed 's/ /_/g')
          BUILDTIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')

          echo "GITHASH=$GITHASH" >> $GITHUB_ENV
          echo "BUILDENV=$BUILDENV" >> $GITHUB_ENV
          echo "BUILDTIME=$BUILDTIME" >> $GITHUB_ENV

      - uses: wangyoucao577/go-release-action@v1.33
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "https://dl.google.com/go/go1.23.5.linux-amd64.tar.gz"
          build_flags: "-trimpath"
          ldflags: |
            -s -w \
            -X=github.com/helviojunior/sprayshark/internal/version.Version=$(cat /tmp/version.txt) \
            -X=github.com/helviojunior/sprayshark/internal/version.GitHash=$(cat /tmp/githash.txt) \
            -X=github.com/helviojunior/sprayshark/internal/version.GoBuildEnv=$(cat /tmp/buildenv.txt) \
            -X=github.com/helviojunior/sprayshark/internal/version.GoBuildTime=$(cat /tmp/buildtime.txt)
          pre_command: chmod +x ./github/prepare.sh; ./github/prepare.sh

